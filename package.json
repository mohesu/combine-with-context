{
  "name": "combine-with-context",
  "displayName": "Combine with Context",
  "description": "Export project code context in clean Markdown for LLMs. Maps languages, filters files, supports .gitignore and history.",
  "version": "25.8.2704",
  "publisher": "mohesu",
  "icon": "icon.png",
  "engines": {
    "vscode": "^1.99.0"
  },
  "categories": [
    "Other",
    "Snippets"
  ],
  "keywords": [
    "copy with context",
    "keybindings",
    "LLM context",
    "code context",
    "code as markdown",
    "copy for ai",
    "chatgpt",
    "tree view",
    "combine with context"
  ],
  "activationEvents": [
    "onCommand:combineWithContext.copyToClipboard",
    "onCommand:combineWithContext.saveAsZip",
    "onCommand:combineWithContext.saveToPasteFile",
    "onCommand:combineWithContext.updateLast",
    "onCommand:combineWithContext.undoLastSave",
    "onCommand:combineWithContext.showLog"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "combineWithContext.copyToClipboard",
        "title": "CC: Copy to Clipboard",
        "category": "Combine with Context"
      },
      {
        "command": "combineWithContext.saveToPasteFile",
        "title": "CC: Save to paste file",
        "category": "Combine with Context"
      },
      {
        "command": "combineWithContext.saveAsZip",
        "title": "CC: Save selection as ZIP",
        "category": "Combine with Context"
      },
      {
        "command": "combineWithContext.updateLast",
        "title": "CC: Update last output",
        "category": "Combine with Context"
      },
      {
        "command": "combineWithContext.undoLastSave",
        "title": "CC: Undo last save",
        "category": "Combine with Context"
      },
      {
        "command": "combineWithContext.showLog",
        "title": "CC: Show Log",
        "category": "Combine with Context"
      }
    ],
    "submenus": [
      {
        "id": "combineWithContext.saveAs",
        "label": "CC: Save As"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "command": "combineWithContext.copyToClipboard",
          "group": "9_cutcopypaste@3"
        },
        {
          "submenu": "combineWithContext.saveAs",
          "group": "9_cutcopypaste@4"
        },
        {
          "command": "combineWithContext.updateLast",
          "group": "9_cutcopypaste@5"
        },
        {
          "command": "combineWithContext.undoLastSave",
          "group": "9_cutcopypaste@6"
        }
      ],
      "combineWithContext.saveAs": [
        {
          "command": "combineWithContext.saveToPasteFile",
          "group": "1"
        },
        {
          "command": "combineWithContext.saveAsZip",
          "group": "2"
        }
      ]
    },
    "keybindings": [
      {
        "command": "combineWithContext.copyToClipboard",
        "key": "ctrl+alt+shift+c",
        "when": "explorerViewletFocus"
      },
      {
        "command": "combineWithContext.saveAsZip",
        "key": "ctrl+alt+shift+o",
        "when": "explorerViewletFocus"
      },
      {
        "command": "combineWithContext.saveToPasteFile",
        "key": "ctrl+alt+shift+p",
        "when": "explorerViewletFocus"
      },
      {
        "command": "combineWithContext.updateLast",
        "key": "ctrl+alt+shift+u",
        "when": "explorerViewletFocus"
      },
      {
        "command": "combineWithContext.undoLastSave",
        "key": "ctrl+alt+shift+z",
        "when": "explorerViewletFocus"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "Combine with Context configuration",
      "properties": {
        "combineWithContext.zipFileName": {
          "type": "string",
          "default": "context.zip",
          "description": "Name or relative path for the ZIP archive of selected files (placed under outputSubfolder if set)."
        },
        "combineWithContext.outputFileName": {
          "type": "string",
          "default": "paste.md",
          "description": "Name or relative path of the output file."
        },
        "combineWithContext.appendMode": {
          "type": "boolean",
          "default": false,
          "description": "Append to existing file instead of overwriting."
        },
        "combineWithContext.includeTimestamp": {
          "type": "boolean",
          "default": true,
          "description": "Include timestamp on each file block."
        },
        "combineWithContext.filteredExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            ".png",
            ".jpg",
            ".jpeg",
            ".gif",
            ".exe",
            ".dll",
            ".ico",
            ".svg",
            ".webp",
            ".bmp",
            ".tiff",
            ".zip",
            ".tar"
          ],
          "description": "File extensions to exclude (text-only is recommended for LLMs)."
        },
        "combineWithContext.maxFileSize": {
          "type": "number",
          "default": 5242880,
          "description": "Maximum size (bytes) for included files."
        },
        "combineWithContext.outputSubfolder": {
          "type": "string",
          "default": "",
          "description": "Output subfolder in the workspace."
        },
        "combineWithContext.openAfterSave": {
          "type": "boolean",
          "default": true,
          "description": "Open output file in the editor after saving."
        },
        "combineWithContext.separator": {
          "type": "string",
          "default": "\n---\n",
          "description": "Separator string between files in output."
        },
        "combineWithContext.useGitignore": {
          "type": "boolean",
          "default": true,
          "description": "Respect .gitignore rules."
        },
        "combineWithContext.historyFolder": {
          "type": "string",
          "default": ".llm-context-history",
          "description": "Subfolder for automatic backups."
        },
        "combineWithContext.markdownMapping": {
          "type": "object",
          "default": {
            ".md": {
              "language": "markdown"
            },
            ".js": {
              "language": "javascript"
            },
            ".ts": {
              "language": "typescript"
            },
            ".json": {
              "language": "json"
            },
            ".py": {
              "language": "python"
            },
            ".css": {
              "language": "css"
            },
            ".sh": {
              "language": "bash"
            },
            ".yml": {
              "language": "yaml"
            },
            ".yaml": {
              "language": "yaml"
            }
          },
          "description": "Map file extension to markdown code block language."
        },
        "combineWithContext.includeFileTree": {
          "type": "boolean",
          "default": true,
          "description": "Include a file tree at the top of the output."
        },
        "combineWithContext.includeFileAnalysis": {
          "type": "boolean",
          "default": true,
          "description": "Include a file type/count analysis summary."
        },
        "combineWithContext.symlinkHandling": {
          "type": "string",
          "enum": [
            "skip",
            "resolve"
          ],
          "default": "skip",
          "description": "How to handle symlinks: 'skip' to ignore, 'resolve' to follow."
        },
        "combineWithContext.compressContent": {
          "type": "boolean",
          "default": false,
          "description": "Remove whitespace/comments for selected languages before saving."
        }
      }
    }
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/mohesu/combine-with-context.git"
  },
  "dependencies": {
    "ignore": "^7.0.5",
    "yazl": "^3.3.1"
  },
  "devDependencies": {
    "@types/jest": "^29.5.12",
    "@types/node": "^24.1.0",
    "@types/vscode": "^1.99.0",
    "@types/yazl": "^3.3.0",
    "@typescript-eslint/eslint-plugin": "^8.28.0",
    "@typescript-eslint/parser": "^8.28.0",
    "@vscode/vsce": "^3.6.0",
    "esbuild": "^0.25.8",
    "eslint": "^9.23.0",
    "jest": "^29.7.0",
    "npm-run-all": "^4.1.5",
    "pnpm": "^10.14.0",
    "ts-jest": "^29.2.5",
    "typescript": "^5.8.3"
  },
  "scripts": {
    "vscode:prepublish": "pnpm run package",
    "compile": "pnpm run checktypes && pnpm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "pnpm run checktypes && pnpm run lint && node esbuild.js production",
    "pretest": "pnpm run compile && pnpm run lint",
    "checktypes": "tsc --noEmit",
    "lint": "eslint src",
    "lint:fix": "eslint src --fix",
    "test": "jest"
  }
}
