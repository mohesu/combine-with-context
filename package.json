{
  "name": "combine-with-context",
  "displayName": "Combine with Context",
  "description": "Export project code context in clean Markdown for LLMs. Maps languages, filters files, supports .gitignore and history.",
  "version": "2.0.1",
  "publisher": "mohesu",
  "icon": "icon.png",
  "engines": {
    "vscode": "^1.102.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onCommand:copyWithContext.saveToPasteFile",
    "onCommand:copyWithContext.copyToClipboard",
    "onCommand:copyWithContext.undoLastSave"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "copyWithContext.saveToPasteFile",
        "title": "Combine with Context: Save to paste.txt",
        "category": "Combine with Context"
      },
      {
        "command": "copyWithContext.copyToClipboard",
        "title": "Combine with Context: Copy to Clipboard",
        "category": "Combine with Context"
      },
      {
        "command": "copyWithContext.undoLastSave",
        "title": "Combine with Context: Undo last paste.txt Save",
        "category": "Combine with Context"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "command": "copyWithContext.saveToPasteFile",
          "group": "9_cutcopypaste@3"
        },
        {
          "command": "copyWithContext.copyToClipboard",
          "group": "9_cutcopypaste@4"
        },
        {
          "command": "copyWithContext.undoLastSave",
          "group": "9_cutcopypaste@5"
        }
      ]
    },
    "keybindings": [
      {
        "command": "copyWithContext.saveToPasteFile",
        "key": "ctrl+alt+shift+s",
        "when": "explorerViewletFocus"
      },
      {
        "command": "copyWithContext.copyToClipboard",
        "key": "ctrl+alt+shift+c",
        "when": "explorerViewletFocus"
      },
      {
        "command": "copyWithContext.undoLastSave",
        "key": "ctrl+alt+shift+u",
        "when": "explorerViewletFocus"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "Combine with Context configuration",
      "properties": {
        "copyWithContext.outputFileName": {
          "type": "string",
          "default": "paste.txt",
          "description": "Name or relative path of the output file."
        },
        "copyWithContext.appendMode": {
          "type": "boolean",
          "default": false,
          "description": "Append to existing file instead of overwriting."
        },
        "copyWithContext.includeTimestamp": {
          "type": "boolean",
          "default": true,
          "description": "Include timestamp on each save."
        },
        "copyWithContext.filteredExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            ".png",
            ".jpg",
            ".jpeg",
            ".gif",
            ".exe",
            ".dll",
            ".ico",
            ".svg"
          ],
          "description": "File extensions to exclude."
        },
        "copyWithContext.maxFileSize": {
          "type": "number",
          "default": 5242880,
          "description": "Maximum size (bytes) for included files."
        },
        "copyWithContext.outputSubfolder": {
          "type": "string",
          "default": "",
          "description": "Output subfolder in the workspace."
        },
        "copyWithContext.openAfterSave": {
          "type": "boolean",
          "default": true,
          "description": "Open output file in the editor after saving."
        },
        "copyWithContext.separator": {
          "type": "string",
          "default": "\n---\n",
          "description": "Separator string between files in output."
        },
        "copyWithContext.useGitignore": {
          "type": "boolean",
          "default": true,
          "description": "Respect .gitignore rules."
        },
        "copyWithContext.historyFolder": {
          "type": "string",
          "default": ".llm-context-history",
          "description": "Subfolder for automatic backups."
        },
        "copyWithContext.markdownMapping": {
          "type": "object",
          "default": {
            ".md": {
              "language": "markdown"
            },
            ".js": {
              "language": "javascript"
            },
            ".ts": {
              "language": "typescript"
            },
            ".json": {
              "language": "json"
            }
          },
          "description": "Map file extension to markdown code block language."
        }
      }
    }
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/mohesu/combine-with-context.git"
  },
  "dependencies": {
    "ignore": "^7.0.5"
  },
  "devDependencies": {
    "@types/jest": "^30.0.0",
    "@types/node": "^24.1.0",
    "@types/vscode": "^1.102.0",
    "@typescript-eslint/eslint-plugin": "^8.28.0",
    "@typescript-eslint/parser": "^8.28.0",
    "@vscode/vsce": "^3.6.0",
    "esbuild": "^0.25.8",
    "jest": "^30.0.0",
    "ts-jest": "^29.4.0",
    "typescript": "^5.8.3",
    "eslint": "^9.23.0"
  },
  "scripts": {
    "vscode:prepublish": "pnpm run package",
    "compile": "pnpm run check-types && pnpm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "pnpm run check-types && pnpm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "pnpm run compile-tests && pnpm run compile && pnpm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src",
    "lint:fix": "eslint src --fix",
    "test": "jest"
  }
}
